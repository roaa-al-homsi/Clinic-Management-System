<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPerson.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAABGdBTUEAALGPC/xhBQAAA9dJREFUeF7t
        Wc9rE0EUzp/in+IfYGUTitJKSksjWsFDUUoVRL2EehAUC6IFCz0URQS9lkJOxYNgoRdBkHgQxJNHj+t+
        s+9tXoeX7Cab3exs5oOP/sjMm3lf3o/Z2YaHh4eHh4eHh4dH5RAEwYXLrdajhWazt9Bs9SOG9DNis4fP
        LgWLF2n4/ADCCEGysD8XQsXCmGhJnL+2dMWwu7lmuHvveri9sRLeWluWAhGbPTJVP9jiQBSI0Xu+OZKf
        ntw2Y4VQfdgis/UApVTiJCJFE2MYIRLmCBv1EklGzsHjDVWELIRQUiQy7zbiLhU7lSWl0ggbiUhBa5+W
        cRfsDIqu5rDk571tQ+0zSVHA3U41fMMsENJDc1by7+meofaZpEw1RCgt5x7wDcMJtG3NUclvH7th+Oud
        IX7XxkiKou1uLSIHUmsP0orFAf99P0hNNRR7tu/kITJKr1V2YFR6nR4+PCeOFKl/9FSdA8o0c14gzUEQ
        AmjiMNNEYvtYi5Z1B9ze7e6F1EkTxuYwofiE7WSh5ghaaS8Z536f7JoOpQmQlRAKNmALNp2OINQFduCs
        90J1OA//nL1xWyD5/FWEQMcfdhKBnD0s8jPY4esHqpN5+GznDgvk7jmIC/V6p21SQnN0Elrp5e7zmEyz
        +1s3VWcnIWyxXeevPbibgdNINVl7nH4OY8RRFNcipFqego25LE6trl8p1ZJL+kkiCXMG4tTkskzCFilr
        NKEgYyzPg43avuGASNzZmHAeRRdtG/UFRLTIQjxgjd9qSMi6lJHz8V7MxiCijFicfvgZMX6zijE03MPD
        wyMXZM0Zp+jS1Ukfc2tZrOlxIzkDETN1JhJHzjNzIRYNcRdxOz8vTLDeMaS/R4okxcGcxbtbiR2im+1f
        O+csv3wVrh4dhzd+/Aw7X76miiTFgTCYx3OvdgcPrIZBa9+Z44AdNRACTrGD0tFhIg0Tx55vRVT1X0PL
        qw043377XnWOqYmURRxJrMHjYaOytckWR4sajbZIbCOLOEzLRvXuicb91m3aDk5qQ9Sm6kRSXnGYLFJe
        G5jPImFvtM3ZARvJKw4TDmr/H4e2SLTN2UC28mk4Ny1iL7wvHAFou+VCphafb6pE2d1mkmrRwlNLraI4
        s1STLb2K0cOUqVZqFHHtQVvVNlYlDlp/SffZsvZUqTAPY+lRhK7AC2obqiK5FpVyeIwWMsXZhfRi4iaB
        vtTiizUt5ER6MWWakRvFQHYvbSNVZWl1iAXCM5O2kSqzlDoE41gEi+H84xL5tqBQgWQHc5ZFPpvVQqCy
        DoweHh4eHh4eHh51RqPxH006XpHo5V3FAAAAAElFTkSuQmCC
</value>
  </data>
</root>